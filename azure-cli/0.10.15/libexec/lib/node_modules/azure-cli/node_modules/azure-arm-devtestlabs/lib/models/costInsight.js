/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 * 
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

var models = require('./index');

var util = require('util');

/**
 * @class
 * Initializes a new instance of the CostInsight class.
 * @constructor
 * @member {string} [currencyCode]
 * 
 * @member {array} [vmCosts]
 * 
 * @member {string} [provisioningState] The provisioning status of the
 * resource.
 * 
 * @member {string} [id] The identifier of the resource.
 * 
 * @member {string} [name] The name of the resource.
 * 
 * @member {string} [type] The type of the resource.
 * 
 * @member {string} [location] The location of the resource.
 * 
 * @member {object} [tags] The tags of the resource.
 * 
 */
function CostInsight() {
  CostInsight['super_'].call(this);
}

util.inherits(CostInsight, models['BaseResource']);

/**
 * Defines the metadata of CostInsight
 *
 * @returns {object} metadata of CostInsight
 *
 */
CostInsight.prototype.mapper = function () {
  return {
    required: false,
    serializedName: 'CostInsight',
    type: {
      name: 'Composite',
      className: 'CostInsight',
      modelProperties: {
        currencyCode: {
          required: false,
          serializedName: 'properties.currencyCode',
          type: {
            name: 'String'
          }
        },
        vmCosts: {
          required: false,
          serializedName: 'properties.vmCosts',
          type: {
            name: 'Sequence',
            element: {
                required: false,
                serializedName: 'VMCostPropertiesElementType',
                type: {
                  name: 'Composite',
                  className: 'VMCostProperties'
                }
            }
          }
        },
        provisioningState: {
          required: false,
          serializedName: 'properties.provisioningState',
          type: {
            name: 'String'
          }
        },
        id: {
          required: false,
          serializedName: 'id',
          type: {
            name: 'String'
          }
        },
        name: {
          required: false,
          serializedName: 'name',
          type: {
            name: 'String'
          }
        },
        type: {
          required: false,
          serializedName: 'type',
          type: {
            name: 'String'
          }
        },
        location: {
          required: false,
          serializedName: 'location',
          type: {
            name: 'String'
          }
        },
        tags: {
          required: false,
          serializedName: 'tags',
          type: {
            name: 'Dictionary',
            value: {
                required: false,
                serializedName: 'StringElementType',
                type: {
                  name: 'String'
                }
            }
          }
        }
      }
    }
  };
};

module.exports = CostInsight;
