/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 * 
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

var models = require('./index');

var util = require('util');

/**
 * @class
 * Initializes a new instance of the Schedule class.
 * @constructor
 * A schedule.
 * @member {string} [status] The status of the schedule. Possible values
 * include: 'Enabled', 'Disabled'
 * 
 * @member {string} [taskType] The task type of the schedule. Possible values
 * include: 'LabVmsShutdownTask', 'LabVmsStartupTask', 'LabBillingTask'
 * 
 * @member {object} [weeklyRecurrence] The weekly recurrence of the schedule.
 * 
 * @member {array} [weeklyRecurrence.weekdays] The days of the week.
 * 
 * @member {string} [weeklyRecurrence.time] The time of the day.
 * 
 * @member {object} [dailyRecurrence] The daily recurrence of the schedule.
 * 
 * @member {string} [dailyRecurrence.time]
 * 
 * @member {object} [hourlyRecurrence] The hourly recurrence of the schedule.
 * 
 * @member {number} [hourlyRecurrence.minute] Minutes of the hour the schedule
 * will run.
 * 
 * @member {string} [timeZoneId] The time zone id.
 * 
 * @member {string} [provisioningState] The provisioning status of the
 * resource.
 * 
 * @member {string} [id] The identifier of the resource.
 * 
 * @member {string} [name] The name of the resource.
 * 
 * @member {string} [type] The type of the resource.
 * 
 * @member {string} [location] The location of the resource.
 * 
 * @member {object} [tags] The tags of the resource.
 * 
 */
function Schedule() {
  Schedule['super_'].call(this);
}

util.inherits(Schedule, models['BaseResource']);

/**
 * Defines the metadata of Schedule
 *
 * @returns {object} metadata of Schedule
 *
 */
Schedule.prototype.mapper = function () {
  return {
    required: false,
    serializedName: 'Schedule',
    type: {
      name: 'Composite',
      className: 'Schedule',
      modelProperties: {
        status: {
          required: false,
          serializedName: 'properties.status',
          type: {
            name: 'String'
          }
        },
        taskType: {
          required: false,
          serializedName: 'properties.taskType',
          type: {
            name: 'String'
          }
        },
        weeklyRecurrence: {
          required: false,
          serializedName: 'properties.weeklyRecurrence',
          type: {
            name: 'Composite',
            className: 'WeekDetails'
          }
        },
        dailyRecurrence: {
          required: false,
          serializedName: 'properties.dailyRecurrence',
          type: {
            name: 'Composite',
            className: 'DayDetails'
          }
        },
        hourlyRecurrence: {
          required: false,
          serializedName: 'properties.hourlyRecurrence',
          type: {
            name: 'Composite',
            className: 'HourDetails'
          }
        },
        timeZoneId: {
          required: false,
          serializedName: 'properties.timeZoneId',
          type: {
            name: 'String'
          }
        },
        provisioningState: {
          required: false,
          serializedName: 'properties.provisioningState',
          type: {
            name: 'String'
          }
        },
        id: {
          required: false,
          serializedName: 'id',
          type: {
            name: 'String'
          }
        },
        name: {
          required: false,
          serializedName: 'name',
          type: {
            name: 'String'
          }
        },
        type: {
          required: false,
          serializedName: 'type',
          type: {
            name: 'String'
          }
        },
        location: {
          required: false,
          serializedName: 'location',
          type: {
            name: 'String'
          }
        },
        tags: {
          required: false,
          serializedName: 'tags',
          type: {
            name: 'Dictionary',
            value: {
                required: false,
                serializedName: 'StringElementType',
                type: {
                  name: 'String'
                }
            }
          }
        }
      }
    }
  };
};

module.exports = Schedule;
