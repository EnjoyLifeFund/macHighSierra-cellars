/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 * 
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * @class
 * Initializes a new instance of the SubnetOverride class.
 * @constructor
 * Property overrides on a subnet of a virtual network.
 * @member {string} [resourceId] The resource identifier of the subnet.
 * 
 * @member {string} [labSubnetName] The name given to the subnet within the
 * lab.
 * 
 * @member {string} [useInVmCreationPermission] Indicates whether this subnet
 * can be used during virtual machine creation. Possible values include:
 * 'Default', 'Deny', 'Allow'
 * 
 * @member {string} [usePublicIpAddressPermission] Indicates whether public IP
 * addresses can be assigned to virtual machines on this subnet. Possible
 * values include: 'Default', 'Deny', 'Allow'
 * 
 */
function SubnetOverride() {
}

/**
 * Defines the metadata of SubnetOverride
 *
 * @returns {object} metadata of SubnetOverride
 *
 */
SubnetOverride.prototype.mapper = function () {
  return {
    required: false,
    serializedName: 'SubnetOverride',
    type: {
      name: 'Composite',
      className: 'SubnetOverride',
      modelProperties: {
        resourceId: {
          required: false,
          serializedName: 'resourceId',
          type: {
            name: 'String'
          }
        },
        labSubnetName: {
          required: false,
          serializedName: 'labSubnetName',
          type: {
            name: 'String'
          }
        },
        useInVmCreationPermission: {
          required: false,
          serializedName: 'useInVmCreationPermission',
          type: {
            name: 'String'
          }
        },
        usePublicIpAddressPermission: {
          required: false,
          serializedName: 'usePublicIpAddressPermission',
          type: {
            name: 'String'
          }
        }
      }
    }
  };
};

module.exports = SubnetOverride;
