/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 * 
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * @class
 * Initializes a new instance of the Display class.
 * @constructor
 * @member {string} [provider] The localized friendly form of the resource
 * provider name – it is expected to also include the publisher/company
 * responsible. It should use Title Casing and begin with “Microsoft” for 1st
 * party services.
 * 
 * @member {string} [resource] The localized friendly form of the resource
 * type related to this action/operation – it should match the public
 * documentation for the resource provider. It should use Title Casing – for
 * examples, please refer to the “name” section.
 * 
 * @member {string} [operation] The localized friendly name for the operation,
 * as it should be shown to the user. It should be concise (to fit in drop
 * downs) but clear (i.e. self-documenting). It should use Title Casing and
 * include the entity/resource to which it applies.
 * 
 * @member {string} [description] The localized friendly description for the
 * operation, as it should be shown to the user. It should be thorough, yet
 * concise – it will be used in tool tips and detailed views.
 * 
 * @member {string} [origin] The intended executor of the operation; governs
 * the display of the operation in the RBAC UX and the audit logs UX. Default
 * value is 'user,system'
 * 
 */
function Display() {
}

/**
 * Defines the metadata of Display
 *
 * @returns {object} metadata of Display
 *
 */
Display.prototype.mapper = function () {
  return {
    required: false,
    serializedName: 'Display',
    type: {
      name: 'Composite',
      className: 'Display',
      modelProperties: {
        provider: {
          required: false,
          serializedName: 'provider',
          type: {
            name: 'String'
          }
        },
        resource: {
          required: false,
          serializedName: 'resource',
          type: {
            name: 'String'
          }
        },
        operation: {
          required: false,
          serializedName: 'operation',
          type: {
            name: 'String'
          }
        },
        description: {
          required: false,
          serializedName: 'description',
          type: {
            name: 'String'
          }
        },
        origin: {
          required: false,
          serializedName: 'origin',
          type: {
            name: 'String'
          }
        }
      }
    }
  };
};

module.exports = Display;
