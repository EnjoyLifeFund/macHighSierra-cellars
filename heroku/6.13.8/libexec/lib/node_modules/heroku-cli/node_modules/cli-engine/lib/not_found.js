'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _plugins = require('./plugins');

var _plugins2 = _interopRequireDefault(_plugins);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

class NotFound {

  constructor(output, argv) {
    this.argv = argv;
    this.out = output;
    this.config = output.config;
    this.plugins = new _plugins2.default(output);
  }

  allCommands() {
    return this.plugins.commands.reduce((commands, c) => {
      return commands.concat([c.id]).concat(c.aliases || []);
    }, []);
  }

  closest(cmd) {
    const LST = require('levenshtein');
    let max;
    for (let c of this.allCommands()) {
      if (!c) continue;
      let d = new LST(cmd, c);
      if (!max || d.distance < max[1]) max = [c, d.distance];
    }
    return max ? max[0] : null;
  }

  async run() {
    await this.plugins.load();
    let closest = this.closest(this.argv[1]);
    let binHelp = `${this.config.bin} help`;

    let perhaps = closest ? `Perhaps you meant ${this.out.color.yellow(closest)}\n` : '';
    this.out.error(`${this.out.color.yellow(this.argv[1])} is not a ${this.config.bin} command.
${perhaps}Run ${this.out.color.cmd(binHelp)} for a list of available commands.`, 127);
  }
}
exports.default = NotFound;