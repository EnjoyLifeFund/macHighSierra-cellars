'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _cliEngineCommand = require('cli-engine-command');

var _cliEngineCommand2 = _interopRequireDefault(_cliEngineCommand);

var _plugins = require('../../plugins');

var _plugins2 = _interopRequireDefault(_plugins);

var _hooks = require('../../hooks');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

class PluginsInstall extends _cliEngineCommand2.default {

  async run() {
    this.hooks = new _hooks.Hooks({ config: this.config });
    this.plugins = new _plugins2.default(this.config);
    const [plugin, tag = 'latest'] = this.argv[0].split('@');
    await this.hooks.run('plugins:preinstall', { plugin, tag });
    if (!this.config.debug) this.out.action.start(`Installing plugin ${plugin}${tag === 'latest' ? '' : '@' + tag}`);
    await this.plugins.install(plugin, tag);
  }
}
exports.default = PluginsInstall;
PluginsInstall.topic = 'plugins';
PluginsInstall.command = 'install';
PluginsInstall.description = 'installs a plugin into the CLI';
PluginsInstall.help = `
  Example:
    $ heroku plugins:install heroku-production-status
  `;
PluginsInstall.args = [{ name: 'plugin', description: 'plugin to install' }];