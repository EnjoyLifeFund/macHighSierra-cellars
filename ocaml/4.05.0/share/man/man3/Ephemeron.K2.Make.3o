.TH "Ephemeron.K2.Make" 3 source: 2017-07-30 OCamldoc "OCaml library"
.SH NAME
Ephemeron.K2.Make \- Functor building an implementation of a weak hash table
.SH Module
Module   Ephemeron.K2.Make
.SH Documentation
.sp
Module
.BI "Make"
 : 
.B functor (H1 : Hashtbl.HashedType) (H2 : Hashtbl.HashedType) -> sig  end

.sp
Functor building an implementation of a weak hash table

.sp
.B "Parameters:"
.sp
"H1"

.B Hashtbl.HashedType


.sp
"H2"

.B Hashtbl.HashedType





.sp
.sp

.PP

.B === Propose the same interface as usual hash table\&. However since
.B       the bindings are weak, even if mem h k is true, a subsequent
.B       find h k may raise Not_found because the garbage collector
.B       can run between the two\&.
.B 
.B       Moreover, the table shouldn\&'t be modified during a call to iter\&.
.B       Use filter_map_inplace in this case\&. ===

.PP
.I include Hashtbl.S
.sp

.sp

.I val clean 
: 
.B 'a t -> unit
.sp
remove all dead bindings\&. Done automatically during automatic resizing\&.

.sp

.I val stats_alive 
: 
.B 'a t -> Hashtbl.statistics
.sp
same as 
.B Hashtbl\&.SeededS\&.stats
but only count the alive bindings

.sp
