.TH "MoreLabels.Hashtbl.Make" 3 source: 2017-07-30 OCamldoc "OCaml library"
.SH NAME
MoreLabels.Hashtbl.Make \- no description
.SH Module
Module   MoreLabels.Hashtbl.Make
.SH Documentation
.sp
Module
.BI "Make"
 : 
.B functor (H : HashedType) -> sig  end

.sp

.sp
.B "Parameters:"
.sp
"H"

.B MoreLabels.Hashtbl.HashedType





.sp
.sp
.I type key 

.sp

.sp
.I type 
.B 'a
.I t 

.sp

.sp

.I val create 
: 
.B int -> 'a t
.sp

.sp

.I val clear 
: 
.B 'a t -> unit
.sp

.sp

.I val reset 
: 
.B 'a t -> unit
.sp

.sp

.I val copy 
: 
.B 'a t -> 'a t
.sp

.sp

.I val add 
: 
.B 'a t -> key:key -> data:'a -> unit
.sp

.sp

.I val remove 
: 
.B 'a t -> key -> unit
.sp

.sp

.I val find 
: 
.B 'a t -> key -> 'a
.sp

.sp

.I val find_opt 
: 
.B 'a t -> key -> 'a option
.sp

.sp

.I val find_all 
: 
.B 'a t -> key -> 'a list
.sp

.sp

.I val replace 
: 
.B 'a t -> key:key -> data:'a -> unit
.sp

.sp

.I val mem 
: 
.B 'a t -> key -> bool
.sp

.sp

.I val iter 
: 
.B f:(key:key -> data:'a -> unit) ->
.B   'a t -> unit
.sp

.sp

.I val filter_map_inplace 
: 
.B f:(key:key -> data:'a -> 'a option) ->
.B   'a t -> unit
.sp

.sp

.I val fold 
: 
.B f:(key:key -> data:'a -> 'b -> 'b) ->
.B   'a t -> init:'b -> 'b
.sp

.sp

.I val length 
: 
.B 'a t -> int
.sp

.sp

.I val stats 
: 
.B 'a t -> MoreLabels.Hashtbl.statistics
.sp

.sp
