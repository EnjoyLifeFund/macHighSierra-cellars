(function() {var implementors = {};
implementors["std"] = ["impl <a class=\"trait\" href=\"std/iter/trait.Extend.html\" title=\"trait std::iter::Extend\">Extend</a>&lt;<a class=\"struct\" href=\"std/string/struct.String.html\" title=\"struct std::string::String\">String</a>&gt; for <a class=\"struct\" href=\"std/string/struct.String.html\" title=\"struct std::string::String\">String</a>","impl&lt;'a&gt; <a class=\"trait\" href=\"std/iter/trait.Extend.html\" title=\"trait std::iter::Extend\">Extend</a>&lt;<a class=\"enum\" href=\"std/borrow/enum.Cow.html\" title=\"enum std::borrow::Cow\">Cow</a>&lt;'a, <a class=\"primitive\" href=\"primitive.str.html\">str</a>&gt;&gt; for <a class=\"struct\" href=\"std/string/struct.String.html\" title=\"struct std::string::String\">String</a>","impl&lt;T&gt; <a class=\"trait\" href=\"std/iter/trait.Extend.html\" title=\"trait std::iter::Extend\">Extend</a>&lt;T&gt; for <a class=\"struct\" href=\"std/collections/btree_set/struct.BTreeSet.html\" title=\"struct std::collections::btree_set::BTreeSet\">BTreeSet</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"std/cmp/trait.Ord.html\" title=\"trait std::cmp::Ord\">Ord</a>,&nbsp;</span>","impl&lt;T&gt; <a class=\"trait\" href=\"std/iter/trait.Extend.html\" title=\"trait std::iter::Extend\">Extend</a>&lt;T&gt; for <a class=\"struct\" href=\"std/collections/binary_heap/struct.BinaryHeap.html\" title=\"struct std::collections::binary_heap::BinaryHeap\">BinaryHeap</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"std/cmp/trait.Ord.html\" title=\"trait std::cmp::Ord\">Ord</a>,&nbsp;</span>","impl&lt;K, V&gt; <a class=\"trait\" href=\"std/iter/trait.Extend.html\" title=\"trait std::iter::Extend\">Extend</a>&lt;<a class=\"primitive\" href=\"primitive.tuple.html\">(</a>K, V<a class=\"primitive\" href=\"primitive.tuple.html\">)</a>&gt; for <a class=\"struct\" href=\"std/collections/btree_map/struct.BTreeMap.html\" title=\"struct std::collections::btree_map::BTreeMap\">BTreeMap</a>&lt;K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: <a class=\"trait\" href=\"std/cmp/trait.Ord.html\" title=\"trait std::cmp::Ord\">Ord</a>,&nbsp;</span>","impl&lt;'a&gt; <a class=\"trait\" href=\"std/iter/trait.Extend.html\" title=\"trait std::iter::Extend\">Extend</a>&lt;&amp;'a <a class=\"primitive\" href=\"primitive.str.html\">str</a>&gt; for <a class=\"struct\" href=\"std/string/struct.String.html\" title=\"struct std::string::String\">String</a>","impl&lt;'a, T&gt; <a class=\"trait\" href=\"std/iter/trait.Extend.html\" title=\"trait std::iter::Extend\">Extend</a>&lt;&amp;'a T&gt; for <a class=\"struct\" href=\"std/collections/btree_set/struct.BTreeSet.html\" title=\"struct std::collections::btree_set::BTreeSet\">BTreeSet</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: 'a + <a class=\"trait\" href=\"std/marker/trait.Copy.html\" title=\"trait std::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"std/cmp/trait.Ord.html\" title=\"trait std::cmp::Ord\">Ord</a>,&nbsp;</span>","impl <a class=\"trait\" href=\"std/iter/trait.Extend.html\" title=\"trait std::iter::Extend\">Extend</a>&lt;<a class=\"primitive\" href=\"primitive.char.html\">char</a>&gt; for <a class=\"struct\" href=\"std/string/struct.String.html\" title=\"struct std::string::String\">String</a>","impl&lt;'a, T&gt; <a class=\"trait\" href=\"std/iter/trait.Extend.html\" title=\"trait std::iter::Extend\">Extend</a>&lt;&amp;'a T&gt; for <a class=\"struct\" href=\"std/collections/linked_list/struct.LinkedList.html\" title=\"struct std::collections::linked_list::LinkedList\">LinkedList</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: 'a + <a class=\"trait\" href=\"std/marker/trait.Copy.html\" title=\"trait std::marker::Copy\">Copy</a>,&nbsp;</span>","impl&lt;'a&gt; <a class=\"trait\" href=\"std/iter/trait.Extend.html\" title=\"trait std::iter::Extend\">Extend</a>&lt;&amp;'a <a class=\"primitive\" href=\"primitive.char.html\">char</a>&gt; for <a class=\"struct\" href=\"std/string/struct.String.html\" title=\"struct std::string::String\">String</a>","impl&lt;T&gt; <a class=\"trait\" href=\"std/iter/trait.Extend.html\" title=\"trait std::iter::Extend\">Extend</a>&lt;T&gt; for <a class=\"struct\" href=\"std/collections/linked_list/struct.LinkedList.html\" title=\"struct std::collections::linked_list::LinkedList\">LinkedList</a>&lt;T&gt;","impl&lt;'a, T&gt; <a class=\"trait\" href=\"std/iter/trait.Extend.html\" title=\"trait std::iter::Extend\">Extend</a>&lt;&amp;'a T&gt; for <a class=\"struct\" href=\"std/collections/vec_deque/struct.VecDeque.html\" title=\"struct std::collections::vec_deque::VecDeque\">VecDeque</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: 'a + <a class=\"trait\" href=\"std/marker/trait.Copy.html\" title=\"trait std::marker::Copy\">Copy</a>,&nbsp;</span>","impl&lt;A&gt; <a class=\"trait\" href=\"std/iter/trait.Extend.html\" title=\"trait std::iter::Extend\">Extend</a>&lt;A&gt; for <a class=\"struct\" href=\"std/collections/vec_deque/struct.VecDeque.html\" title=\"struct std::collections::vec_deque::VecDeque\">VecDeque</a>&lt;A&gt;","impl&lt;'a, K, V&gt; <a class=\"trait\" href=\"std/iter/trait.Extend.html\" title=\"trait std::iter::Extend\">Extend</a>&lt;<a class=\"primitive\" href=\"primitive.tuple.html\">(</a>&amp;'a K, &amp;'a V<a class=\"primitive\" href=\"primitive.tuple.html\">)</a>&gt; for <a class=\"struct\" href=\"std/collections/btree_map/struct.BTreeMap.html\" title=\"struct std::collections::btree_map::BTreeMap\">BTreeMap</a>&lt;K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: <a class=\"trait\" href=\"std/marker/trait.Copy.html\" title=\"trait std::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"std/cmp/trait.Ord.html\" title=\"trait std::cmp::Ord\">Ord</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: <a class=\"trait\" href=\"std/marker/trait.Copy.html\" title=\"trait std::marker::Copy\">Copy</a>,&nbsp;</span>","impl&lt;'a, T&gt; <a class=\"trait\" href=\"std/iter/trait.Extend.html\" title=\"trait std::iter::Extend\">Extend</a>&lt;&amp;'a T&gt; for <a class=\"struct\" href=\"std/collections/binary_heap/struct.BinaryHeap.html\" title=\"struct std::collections::binary_heap::BinaryHeap\">BinaryHeap</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: 'a + <a class=\"trait\" href=\"std/marker/trait.Copy.html\" title=\"trait std::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"std/cmp/trait.Ord.html\" title=\"trait std::cmp::Ord\">Ord</a>,&nbsp;</span>","impl&lt;T&gt; <a class=\"trait\" href=\"std/iter/trait.Extend.html\" title=\"trait std::iter::Extend\">Extend</a>&lt;T&gt; for <a class=\"struct\" href=\"std/vec/struct.Vec.html\" title=\"struct std::vec::Vec\">Vec</a>&lt;T&gt;","impl&lt;'a, T&gt; <a class=\"trait\" href=\"std/iter/trait.Extend.html\" title=\"trait std::iter::Extend\">Extend</a>&lt;&amp;'a T&gt; for <a class=\"struct\" href=\"std/vec/struct.Vec.html\" title=\"struct std::vec::Vec\">Vec</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: 'a + <a class=\"trait\" href=\"std/marker/trait.Copy.html\" title=\"trait std::marker::Copy\">Copy</a>,&nbsp;</span>","impl&lt;K, V, S&gt; <a class=\"trait\" href=\"std/iter/trait.Extend.html\" title=\"trait std::iter::Extend\">Extend</a>&lt;<a class=\"primitive\" href=\"primitive.tuple.html\">(</a>K, V<a class=\"primitive\" href=\"primitive.tuple.html\">)</a>&gt; for <a class=\"struct\" href=\"std/collections/struct.HashMap.html\" title=\"struct std::collections::HashMap\">HashMap</a>&lt;K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: <a class=\"trait\" href=\"std/cmp/trait.Eq.html\" title=\"trait std::cmp::Eq\">Eq</a> + <a class=\"trait\" href=\"std/hash/trait.Hash.html\" title=\"trait std::hash::Hash\">Hash</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: <a class=\"trait\" href=\"std/hash/trait.BuildHasher.html\" title=\"trait std::hash::BuildHasher\">BuildHasher</a>,&nbsp;</span>","impl&lt;'a, K, V, S&gt; <a class=\"trait\" href=\"std/iter/trait.Extend.html\" title=\"trait std::iter::Extend\">Extend</a>&lt;<a class=\"primitive\" href=\"primitive.tuple.html\">(</a>&amp;'a K, &amp;'a V<a class=\"primitive\" href=\"primitive.tuple.html\">)</a>&gt; for <a class=\"struct\" href=\"std/collections/struct.HashMap.html\" title=\"struct std::collections::HashMap\">HashMap</a>&lt;K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: <a class=\"trait\" href=\"std/cmp/trait.Eq.html\" title=\"trait std::cmp::Eq\">Eq</a> + <a class=\"trait\" href=\"std/hash/trait.Hash.html\" title=\"trait std::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"std/marker/trait.Copy.html\" title=\"trait std::marker::Copy\">Copy</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: <a class=\"trait\" href=\"std/marker/trait.Copy.html\" title=\"trait std::marker::Copy\">Copy</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: <a class=\"trait\" href=\"std/hash/trait.BuildHasher.html\" title=\"trait std::hash::BuildHasher\">BuildHasher</a>,&nbsp;</span>","impl&lt;T, S&gt; <a class=\"trait\" href=\"std/iter/trait.Extend.html\" title=\"trait std::iter::Extend\">Extend</a>&lt;T&gt; for <a class=\"struct\" href=\"std/collections/struct.HashSet.html\" title=\"struct std::collections::HashSet\">HashSet</a>&lt;T, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"std/cmp/trait.Eq.html\" title=\"trait std::cmp::Eq\">Eq</a> + <a class=\"trait\" href=\"std/hash/trait.Hash.html\" title=\"trait std::hash::Hash\">Hash</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: <a class=\"trait\" href=\"std/hash/trait.BuildHasher.html\" title=\"trait std::hash::BuildHasher\">BuildHasher</a>,&nbsp;</span>","impl&lt;'a, T, S&gt; <a class=\"trait\" href=\"std/iter/trait.Extend.html\" title=\"trait std::iter::Extend\">Extend</a>&lt;&amp;'a T&gt; for <a class=\"struct\" href=\"std/collections/struct.HashSet.html\" title=\"struct std::collections::HashSet\">HashSet</a>&lt;T, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: 'a + <a class=\"trait\" href=\"std/cmp/trait.Eq.html\" title=\"trait std::cmp::Eq\">Eq</a> + <a class=\"trait\" href=\"std/hash/trait.Hash.html\" title=\"trait std::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"std/marker/trait.Copy.html\" title=\"trait std::marker::Copy\">Copy</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: <a class=\"trait\" href=\"std/hash/trait.BuildHasher.html\" title=\"trait std::hash::BuildHasher\">BuildHasher</a>,&nbsp;</span>","impl&lt;P:&nbsp;<a class=\"trait\" href=\"std/convert/trait.AsRef.html\" title=\"trait std::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"std/path/struct.Path.html\" title=\"struct std::path::Path\">Path</a>&gt;&gt; <a class=\"trait\" href=\"std/iter/trait.Extend.html\" title=\"trait std::iter::Extend\">Extend</a>&lt;P&gt; for <a class=\"struct\" href=\"std/path/struct.PathBuf.html\" title=\"struct std::path::PathBuf\">PathBuf</a>",];

            if (window.register_implementors) {
                window.register_implementors(implementors);
            } else {
                window.pending_implementors = implementors;
            }
        
})()
