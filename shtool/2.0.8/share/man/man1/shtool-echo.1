.\" Automatically generated by Pod::Man 2.27 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "SHTOOL-ECHO.TMP 1"
.TH SHTOOL-ECHO.TMP 1 "shtool 2.0.8" "18-Jul-2008" "GNU Portable Shell Tool"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
shtool echo \- GNU shtool echo(1) extensional command
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
\&\fBshtool echo\fR
[\fB\-n\fR|\fB\-\-newline\fR]
[\fB\-e\fR|\fB\-\-expand\fR]
\&\fIstring\fR
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\fBshtool echo\fR is an \fIecho\fR\|(1) style command which prints \fIstring\fR to
\&\fIstdout\fR and optionally provides special expansion constructs (terminal
bold mode, environment details, date, etc) and newline control. The
trick of this command is that it provides a portable \fB\-n\fR option and
hides the gory details needed to find out the environment details under
option \fB\-e\fR.
.SH "OPTIONS"
.IX Header "OPTIONS"
The following command line options are available.
.IP "\fB\-n\fR, \fB\-\-newline\fR" 4
.IX Item "-n, --newline"
By default, output is written to \fIstdout\fR followed by a \*(L"newline\*(R"
(\s-1ASCII\s0 character 0x0a). If option \fB\-n\fR is used, this newline character
is omitted.
.IP "\fB\-e\fR, \fB\-\-expand\fR" 4
.IX Item "-e, --expand"
If option \fB\-e\fR is used, \fIstring\fR can contain special "\fB%\fR\fIx\fR"
constructs which are expanded before the output is written. Currently
the following constructs are recognized:
.RS 4
.ie n .IP "\fB\fB%B\fB\fR" 4
.el .IP "\fB\f(CB%B\fB\fR" 4
.IX Item "%B"
switch terminal mode to bold display mode.
.ie n .IP "\fB\fB%b\fB\fR" 4
.el .IP "\fB\f(CB%b\fB\fR" 4
.IX Item "%b"
switch terminal mode back to normal display mode.
.ie n .IP "\fB\fB%u\fB\fR" 4
.el .IP "\fB\f(CB%u\fB\fR" 4
.IX Item "%u"
the current user name.
.ie n .IP "\fB\fB%U\fB\fR" 4
.el .IP "\fB\f(CB%U\fB\fR" 4
.IX Item "%U"
the current user id (numerical).
.ie n .IP "\fB\fB%g\fB\fR" 4
.el .IP "\fB\f(CB%g\fB\fR" 4
.IX Item "%g"
the current group name.
.ie n .IP "\fB\fB%G\fB\fR" 4
.el .IP "\fB\f(CB%G\fB\fR" 4
.IX Item "%G"
the current group id (numerical).
.ie n .IP "\fB\fB%h\fB\fR" 4
.el .IP "\fB\f(CB%h\fB\fR" 4
.IX Item "%h"
the current hostname (without any domain extension).
.ie n .IP "\fB\fB%d\fB\fR" 4
.el .IP "\fB\f(CB%d\fB\fR" 4
.IX Item "%d"
the current domain name.
.ie n .IP "\fB\fB%D\fB\fR" 4
.el .IP "\fB\f(CB%D\fB\fR" 4
.IX Item "%D"
the current day of the month.
.ie n .IP "\fB\fB%M\fB\fR" 4
.el .IP "\fB\f(CB%M\fB\fR" 4
.IX Item "%M"
the current month (numerical).
.ie n .IP "\fB\fB%m\fB\fR" 4
.el .IP "\fB\f(CB%m\fB\fR" 4
.IX Item "%m"
the current month name.
.ie n .IP "\fB\fB%Y\fB\fR" 4
.el .IP "\fB\f(CB%Y\fB\fR" 4
.IX Item "%Y"
the current year.
.RE
.RS 4
.RE
.SH "EXAMPLE"
.IX Header "EXAMPLE"
.Vb 4
\& #   shell script
\& shtool echo \-n \-e "Enter your name [%B%u%b]: "; read name
\& shtool echo \-e "Your Email address might be %u@%h%d"
\& shtool echo \-e "The current date is %D\-%m\-%Y"
.Ve
.SH "HISTORY"
.IX Header "HISTORY"
The \fB\s-1GNU\s0 shtool\fR \fBecho\fR command was originally written by Ralf S.
Engelschall <rse@engelschall.com> in 1998 for \fIWebsite \s-1META\s0
Language\fR (\s-1WML\s0) under the name \fBbuildinfo\fR. It was later taken over
into \fB\s-1GNU\s0 shtool\fR.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fIshtool\fR\|(1), \fIecho\fR\|(1).
