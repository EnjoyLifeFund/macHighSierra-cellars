.\" Automatically generated by Pod::Man 2.27 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "SHTOOL-TARBALL.TMP 1"
.TH SHTOOL-TARBALL.TMP 1 "shtool 2.0.8" "18-Jul-2008" "GNU Portable Shell Tool"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
shtool tarball \- GNU shtool command for rolling standardized tarballs
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
\&\fBshtool tarball\fR
[\fB\-t\fR|\fB\-\-trace\fR]
[\fB\-v\fR|\fB\-\-verbose\fR]
[\fB\-o\fR|\fB\-\-output\fR \fItarball\fR]
[\fB\-c\fR|\fB\-\-compress\fR \fIprog\fR]
[\fB\-d\fR|\fB\-\-directory\fR \fIdirectory\fR]
[\fB\-u\fR|\fB\-\-user\fR \fIuser\fR]
[\fB\-g\fR|\fB\-\-group\fR \fIgroup\fR]
[\fB\-e\fR|\fB\-\-exclude\fR \fIpattern\fR]
\&\fIpath\fR [\fIpath\fR ...]
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This command is for rolling input files under \fIpath\fR into a
distribution tarballs which can be extracted by \fItar\fR\|(1).
.PP
The four important aspects of good open source software tarballs are:
(1) unpack into a single top-level directory, (2) top-level directory
corresponds to the tarball filename, (3) tarball files should be sorted
and (4) arbitrary names for file owner and group.
.SH "OPTIONS"
.IX Header "OPTIONS"
The following command line options are available.
.IP "\fB\-v\fR, \fB\-\-verbose\fR" 4
.IX Item "-v, --verbose"
Display some processing information.
.IP "\fB\-t\fR, \fB\-\-trace\fR" 4
.IX Item "-t, --trace"
Enable the output of the essential shell commands which are executed.
.IP "\fB\-o\fR, \fB\-\-output\fR \fItarball\fR" 4
.IX Item "-o, --output tarball"
Output tarball to file \fItarball\fR.
.IP "\fB\-c\fR, \fB\-\-compress\fR \fIprog\fR" 4
.IX Item "-c, --compress prog"
Pipe resulting tarball through compression program \fIprog\fR.
.IP "\fB\-d\fR, \fB\-\-directory\fR \fIdirectory\fR" 4
.IX Item "-d, --directory directory"
Sets the top-level directory into which the tarball unpacks.
By default it is \fItarball\fR without the trailing \f(CW\*(C`.tar.*\*(C'\fR extension.
.IP "\fB\-u\fR, \fB\-\-user\fR \fIuser\fR" 4
.IX Item "-u, --user user"
The user (owner) of files and directories in the tarball to \fIuser\fR.
.IP "\fB\-g\fR, \fB\-\-group\fR \fIgroup\fR" 4
.IX Item "-g, --group group"
The group of files and directories in the tarball to \fIgroup\fR.
.IP "\fB\-e\fR, \fB\-\-exclude\fR \fIpattern\fR" 4
.IX Item "-e, --exclude pattern"
Exclude files and directories matching comma-separated list of
regex \fIpattern\fR from the tarball. Directories are expanded
before the filtering takes place. The default filter pattern is
"\f(CW\*(C`CVS,\e\e.cvsignore,\e\e.svn,\e\e.[oa]\e$\*(C'\fR".
.SH "EXAMPLE"
.IX Header "EXAMPLE"
.Vb 6
\& #   Makefile.in
\& dist:
\&     ...
\&     V=\`shtool version \-d short ...\`; \e
\&     shtool tarball \-o foobar\-$$V.tar.gz \-c \*(Aqgzip \-9\*(Aq \e
\&                    \-u bar \-g gnu \-e \*(AqCVS,\e.cvsignore\*(Aq .
.Ve
.SH "HISTORY"
.IX Header "HISTORY"
The \fB\s-1GNU\s0 shtool\fR \fBtarball\fR command was originally written by Ralf S.
Engelschall <rse@engelschall.com> in 1999 for \fB\s-1GNU\s0 shtool\fR.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fIshtool\fR\|(1), \fItar\fR\|(1), \fIcompress\fR\|(1).
