.\" Automatically generated by Pod::Man 2.27 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "SHTOOL-VERSION.TMP 1"
.TH SHTOOL-VERSION.TMP 1 "shtool 2.0.8" "18-Jul-2008" "GNU Portable Shell Tool"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
shtool version \- GNU shtool maintain version information file
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
\&\fBshtool version\fR
[\fB\-l\fR|\fB\-\-language\fR \fIlang\fR]
[\fB\-n\fR|\fB\-\-name\fR \fIname\fR]
[\fB\-p\fR|\fB\-\-prefix\fR \fIprefix\fR]
[\fB\-s\fR|\fB\-\-set\fR \fIversion\fR]
[\fB\-e\fR|\fB\-\-edit\fR]
[\fB\-i\fR|\fB\-\-increase\fR \fIknob\fR]
[\fB\-d\fR|\fB\-\-display\fR \fItype\fR]
\&\fIfile\fR
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This command displays and maintains version information in \fIfile\fR.
.PP
The version is always described with a triple
<\fIversion\fR,\fIrevision\fR,\fIlevel\fR> and is represented
by a string which always matches the regular expression
"\f(CW\*(C`[0\-9]+\e.[0\-9]+[sabp.][0\-9]+\*(C'\fR".
.PP
The hexadecimal format for a version \f(CW\*(C`v.rtl\*(C'\fR is \f(CW\*(C`VVRRTLL\*(C'\fR where \f(CW\*(C`VV\*(C'\fR
and \f(CW\*(C`RR\*(C'\fR directly correspond to \f(CW\*(C`v\*(C'\fR and \f(CW\*(C`r\*(C'\fR, \f(CW\*(C`T\*(C'\fR encodes the level
type as \f(CW9\fR, \f(CW2\fR, \f(CW1\fR, \f(CW0\fR (representing \f(CW\*(C`s\*(C'\fR, \f(CW\*(C`p\*(C'\fR/\f(CW\*(C`.\*(C'\fR, \f(CW\*(C`b\*(C'\fR, \f(CW\*(C`a\*(C'\fR
in this order) and \f(CW\*(C`LL\*(C'\fR is either directly corresponding to \f(CW\*(C`l\*(C'\fR or set
to \f(CW99\fR if level type is \f(CW\*(C`s\*(C'\fR.
.SH "OPTIONS"
.IX Header "OPTIONS"
The following command line options are available.
.IP "\fB\-v\fR, \fB\-\-verbose\fR" 4
.IX Item "-v, --verbose"
Print verbose information during processing.
.IP "\fB\-l\fR, \fB\-\-language\fR \fIlang\fR" 4
.IX Item "-l, --language lang"
Choose format of version file \fIfile\fR. \fIlang\fR="\f(CW\*(C`txt\*(C'\fR", \s-1ANSI C
\&\s0(\fIlang\fR=\*(L"c\*(R"), M4 (\fIlang\fR=\*(L"m4\*(R"), Perl (\fIlang\fR=\*(L"perl\*(R") or Python
(\fIlang\fR=\*(L"python\*(R"). Default is \f(CW\*(C`txt\*(C'\fR.
.IP "\fB\-n\fR, \fB\-\-name\fR \fIname\fR" 4
.IX Item "-n, --name name"
Name the program the version is maintained for. Default is \f(CW\*(C`unknown\*(C'\fR.
.IP "\fB\-p\fR, \fB\-\-prefix\fR \fIprefix\fR =item \fB\-s\fR, \fB\-\-set\fR \fIversion\fR" 4
.IX Item "-p, --prefix prefix =item -s, --set version"
Set the version to \fIversion\fR.
.IP "\fB\-e\fR, \fB\-\-edit\fR" 4
.IX Item "-e, --edit"
Interactively enter a new version.
.IP "\fB\-i\fR, \fB\-\-increase\fR \fIknob\fR" 4
.IX Item "-i, --increase knob"
When option ``\fB\-i\fR'' is used, the current version in \fIfile\fR is updated
by increasing one element of the version where \fIknob\fR can be one of
the following: ``\f(CW\*(C`v\*(C'\fR'' for increasing the version by 1 (and resetting
revision and level to 0), ``\f(CW\*(C`r\*(C'\fR'' for increasing the revision by 1 (and
resetting level to 0) or ``\f(CW\*(C`l\*(C'\fR'' for increasing the level by 1.
.IP "\fB\-d\fR, \fB\-\-display\fR \fItype\fR" 4
.IX Item "-d, --display type"
Control the display type: "\f(CW\*(C`short\*(C'\fR\*(L" for a short version display,
\&\*(R"\f(CW\*(C`long\*(C'\fR\*(L" for a longer version display, \*(R"\f(CW\*(C`hex\*(C'\fR\*(L" for a hexadecimal
display of the version and \*(R"\f(CW\*(C`libtool\*(C'\fR" for a format suitable for use
with \s-1GNU\s0 libtool.
.SH "EXAMPLE"
.IX Header "EXAMPLE"
.Vb 2
\& #   shell script
\& shtool version \-l c \-n FooBar \-p foobar \-s 1.2b3 version.c
\&
\& #   configure.in
\& V=\`shtool version \-l c \-d long version.c\`
\& echo "Configuring FooBar, Version $V"
.Ve
.SH "HISTORY"
.IX Header "HISTORY"
The \fB\s-1GNU\s0 shtool\fR \fBversion\fR command was originally written by Ralf S.
Engelschall <rse@engelschall.com> in 1994 for \fB\s-1OSSP\s0 eperl\fR. It
was later rewritten from scratch for inclusion into \fB\s-1GNU\s0 shtool\fR.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fIshtool\fR\|(1).
