.\" Automatically generated by Pod::Man 4.09 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.if !\nF .nr F 0
.if \nF>0 \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    if !\nF==2 \{\
.        nr % 0
.        nr F 2
.    \}
.\}
.\" ========================================================================
.\"
.IX Title "native::Base 3"
.TH native::Base 3 "2012-12-02" "perl v5.26.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
SVN::Base \- Base class for importing symbols for svn modules
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 3
\&    # Load the svn_ra_* functions into the SVN::Ra namespace.
\&    package SVN::Ra;
\&    use SVN::Base qw(Ra svn_ra_);
\&
\&    # Load svn_config_t structure accessors in the magic namcespace
\&    # provided by swig, so we could use it returned by other functions
\&    package _p_svn_config_t;
\&    use SVN::Base qw(Core svn_config_);
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
SVN::Base is a module importing the subversion perl bindings raw
symbols created by swig, into proper namespace and make them easier to
use.
.PP
It will also find the accessors for members of a C struct, create an
simpler accessor function like \f(CW\*(C`$data\->field()\*(C'\fR and
\&\f(CW\*(C`$data\->field($new_value)\*(C'\fR.
.PP
Once you understand the convention of subversion functions in perl
bindings, you could look at the subversion api and write them in perl.
The \s-1API\s0 is available in the source header files or online at
http://svn.collab.net/svn\-doxygen/.
.SH "INTERNALS"
.IX Header "INTERNALS"
The perl bindings of swig wraps raw functions into different perl
modules, for example, SVN::_Core, SVN::_Repos. Upon import, SVN::Base
bootstrap the requested module if it's not yet loaded, and iterate
over the symbols provided in that module, it them puts the function
with prefix trimmed in the namespace of the caller for this import.
.PP
The 3rd through the last parameter is a list of symbol endings that
you wish for SVN::Base not to import into your namespace.  This is useful
for cases where you may want to import certain symbols differently than
normally.
.SH "CAVEATS"
.IX Header "CAVEATS"
SVN::Base consider a function as structure member accessor if it is
postfixed ``_get'' or ``_set''. Real functions with this postfixes
will need extra handling.
.SH "AUTHORS"
.IX Header "AUTHORS"
Chia-liang Kao <clkao@clkao.org>
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
.Vb 7
\&    Licensed to the Apache Software Foundation (ASF) under one
\&    or more contributor license agreements.  See the NOTICE file
\&    distributed with this work for additional information
\&    regarding copyright ownership.  The ASF licenses this file
\&    to you under the Apache License, Version 2.0 (the
\&    "License"); you may not use this file except in compliance
\&    with the License.  You may obtain a copy of the License at
\&
\&      http://www.apache.org/licenses/LICENSE\-2.0
\&
\&    Unless required by applicable law or agreed to in writing,
\&    software distributed under the License is distributed on an
\&    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
\&    KIND, either express or implied.  See the License for the
\&    specific language governing permissions and limitations
\&    under the License.
.Ve
