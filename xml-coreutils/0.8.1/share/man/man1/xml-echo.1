\" t
.TH XML-ECHO 1 "xml-coreutils" "Version 0.8.1" ""
.SH NAME
xml-echo \- generate an XML file on the standard output.
.SH SYNOPSIS
.HP
.B xml-echo 
.RI [ OPTION ]...
.RI [ STRING ]...
.SH DESCRIPTION
.PP
.B xml-echo
prints the STRING(s) to the standard output as an XML file.
.P
If the -e switch is used, then each STRING is interpreted as
a concatenated sequence of echo-leaves "[PATH]TEXT" as described in 
.BR
xml-coreutils (7). Otherwise, the STRING(s) are printed
as a list that is merely surrounded
by a pair of root tags.
.P
When using the -e switch,
.B xml-echo
builds the output XML file one node at a time in order
of the supplied echo-leaves, opening and closing tags
automatically as necessary to ensure that the output
is well formed XML. 
.P
The name of the root tag is inferred
from the PATH component of the first echo-leaf. If the 
first echo-leaf is "TEXT", then a default root tag is
chosen. It is an error to subsequently refer to a different root tag.
.P
Line breaks and indenting are automatic after each PATH and after each TEXT.
The -n switch prevents this behaviour.
.P
If the -e switch is used, the following escape sequences in TEXT are also
recognized:
.IP "\e\e"
backslash
.IP "\en"
line break and (maybe) indent following.
.IP "\et"
horizontal tab.
.IP "\eb"
backspace.
.IP "\eI"
do not indent following elements whose depth is greater than the current depth.
.IP "\ei"
indent following elements to their proper depth, with immediate effect (default).
.IP "\eC"
end of comment.
.IP "\ec"
write following as a comment, until \eC is seen or the document ends. No
path fragments which occur within a comment are expanded.
.IP "\eQ"
quote following as CDATA, until \eq is seen or the tag context changes.
Characters prohibited by XML can be freely printed.
.IP "\eq"
explicitly close CDATA if open. Characters prohibited by XML are converted
to entities (default).
.P
A processing instruction is generated by a string of the form "[?TARGET DATA]".
This cannot be confused with a path, since it starts with a '?'. The DATA 
substring can contain attribute/value pairs as in a PATH. The TARGET must not
begin with the string "xml".
.SH OPTIONS
.IP -n
do not output line breaks automatically.
.IP -e
enable interpretation of echo-leaves and backslash escapes in text.
.IP -E
disable interpretation of echo-leaves and backslash escapes (default).
.IP "--path-separator CHAR"
use CHAR instead of '/' as the PATH tag separator inside []. This is not
recommended in general, but can be convenient
if the attribute values contain many slashes, which would otherwise have to be escaped.
.SH EXIT STATUS
xml-echo returns 0 on successful creation of a well formed XML file.
If the STRING(s) result in a broken XML file, then the command is aborted
immediately and 1 is returned.
.SH EXAMPLE
.EX
xml-echo -e "[greeting@mood=jovial]hello \\c[name]Joe"
.EE
.SH BUGS
.P
Currently, there is no direct support for doctypes due to their complexity.
A doctype declaration can be added using sed (1), for example:
.EX
xml-echo hello | sed '1a<!DOCTYPE xyz SYSTEM "uvw">'
.SH AUTHORS
.P
.MT laird@lbreyer.com
Laird A. Breyer
.ME
is the original author of this software.
The source code (GPLv3 or later) for the latest version is available at the
following locations: 
.PP
.na 
.UR http://www.lbreyer.com/gpl.html
.UE
.br
.UR http://xml-coreutils.sourceforge.net
.UE
.ad
.SH SEE ALSO
.PP
.BR xml-coreutils (7)
